package com.example.jdbcdemo.service;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.example.jdbcdemo.domain.Wlasciciel;

public class WlascicielManager {

    private Connection connection;

    private String url = "jdbc:hsqldb:hsql://localhost/workdb";

    private String createTableWlasciciel = "CREATE TABLE Wlasciciel(wlasciciel_id bigint GENERATED BY DEFAULT AS IDENTITY, imie varchar(20), nazwisko varchar(20), nr_tel integer)";

    private PreparedStatement DodajWlasciciela;
    private PreparedStatement UsunWlascicieli;
    private PreparedStatement UsunWlasciciela;
    private PreparedStatement GetWlascicieli;
    private PreparedStatement UpdateWlasciciel;

    private Statement statement;

    public WlascicielManager() {
        try {
            connection = DriverManager.getConnection(url);
            statement = connection.createStatement();

            ResultSet rs = connection.getMetaData().getTables(null, null, null,
                    null);
            boolean tableExists = false;
            while (rs.next()) {
                if ("Wlasciciel".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
                    tableExists = true;
                    break;
                }
            }

            if (!tableExists)
                statement.executeUpdate(createTableWlasciciel);

            DodajWlasciciela = connection
                    .prepareStatement("INSERT INTO Wlasciciel (imie, nazwisko, nr_tel) VALUES (?, ?, ?)");
            UsunWlascicieli = connection
                    .prepareStatement("DELETE FROM Wlasciciel");
            UsunWlasciciela = connection
                    .prepareStatement("DELETE FROM Wlasciciel WHERE wlasciciel_id = ?");
            GetWlascicieli = connection
                    .prepareStatement("SELECT wlasciciel_id, imie, nazwisko, nr_tel FROM Wlasciciel");
            UpdateWlasciciel = connection
                    .prepareStatement("UPDATE Wlasciciel SET imie = ?, nazwisko = ?, nr_tel = ? WHERE wlasciciel_id = ?");

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    Connection getConnection() {
        return connection;
    }

    void wyczyscWlascicieli() {
        try {
            UsunWlascicieli.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public int usunWlasciciela(Wlasciciel wlasciciel) {
        int count = 0;
        try {
            UsunWlasciciela.setLong(1, wlasciciel.getId());

            count = UsunWlasciciela.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return count;
    }

    public int dodajWlasciciela(Wlasciciel wlasciciel) {
        int count = 0;
        try {
            DodajWlasciciela.setString(1, wlasciciel.getImie());
            DodajWlasciciela.setString(2, wlasciciel.getNazwisko());
            DodajWlasciciela.setInt(3, wlasciciel.getNr());

            count = DodajWlasciciela.executeUpdate();

        } catch (SQLException e) {
            e.printStackTrace();
        }
        return count;
    }

/*	public List<Opiekun> GetOpiekunow() {
		List<Opiekun> opiekunowie = new ArrayList<Opiekun>();

		try {
			ResultSet rs = GetOpiekunow.executeQuery();

			while (rs.next()) {
				Opiekun p = new Opiekun();
				p.setId(rs.getInt("opiekun_id"));
				p.setImie(rs.getString("imie"));
				p.setNazwisko(rs.getString("nazwisko"));
				p.setNr(rs.getInt("nr_tel"));
				opiekunowie.add(p);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return opiekunowie;
	} */

    public List<Wlasciciel> GetWlascicieli(){
        List<Wlasciciel> wlasciciele = new ArrayList<Wlasciciel>();

        try{
            ResultSet rs = GetWlascicieli.executeQuery();

            while(rs.next()){
                Wlasciciel w = new Wlasciciel();
                w.setId(rs.getLong("opiekun_id"));
                w.setImie(rs.getString("imie"));
                w.setNazwisko(rs.getString("nazwisko"));
                w.setNr(rs.getInt("nr_tel"));
                wlasciciele.add(w);
            }
        } catch(SQLException e){
            e.printStackTrace();
        }
        return wlasciciele;
    }

    public int updateWlasciciel(Wlasciciel wlasciciel){
        int count = 0;
        try{
            UpdateWlasciciel.setString(1, wlasciciel.getImie());
            UpdateWlasciciel.setString(2, wlasciciel.getNazwisko());
            UpdateWlasciciel.setLong(3, wlasciciel.getId());
            UpdateWlasciciel.setInt(4, wlasciciel.getNr());


            count = UpdateWlasciciel.executeUpdate();
        }catch(SQLException e){
            e.printStackTrace();
        }
        return count;
    }

}

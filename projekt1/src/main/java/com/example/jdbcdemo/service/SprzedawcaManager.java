package com.example.jdbcdemo.service;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.example.jdbcdemo.domain.Sprzedawca;

public class SprzedawcaManager {

	private Connection connection;

	private String url = "jdbc:hsqldb:hsql://localhost/workdb";

	private String createTableSprzedawca = "CREATE TABLE Sprzedawca(Sprzedawca_id bigint GENERATED BY DEFAULT AS IDENTITY, imie varchar(20), nazwisko varchar(20), nr_tel integer)";

	private PreparedStatement DodajSprzedawce;
	private PreparedStatement UsunSprzedawcow;
	private PreparedStatement UsunSprzedawce;
	private PreparedStatement PobierzSprzedawcow;
	private PreparedStatement AktualizujSprzedawce;

	private Statement statement;

	public SprzedawcaManager() {
		try {
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement();

			ResultSet rs = connection.getMetaData().getTables(null, null, null,
					null);
			boolean tableExists = false;
			while (rs.next()) {
				if ("Sprzedawca".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
			}

			if (!tableExists)
				statement.executeUpdate(createTableSprzedawca);

			DodajSprzedawce = connection
					.prepareStatement("INSERT INTO Sprzedawca (imie, nazwisko, nr_tel) VALUES (?, ?, ?)");
			UsunSprzedawcow = connection
					.prepareStatement("DELETE FROM Sprzedawca");
			UsunSprzedawce = connection
					.prepareStatement("DELETE FROM Sprzedawca WHERE Sprzedawca_id = ?");
			PobierzSprzedawcow = connection
					.prepareStatement("SELECT Sprzedawca_id, imie, nazwisko, nr_tel FROM Sprzedawca");
			AktualizujSprzedawce = connection
					.prepareStatement("UPDATE Sprzedawca SET imie = ?, nazwisko = ?, nr_tel = ? WHERE Sprzedawca_id = ?");

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	Connection getConnection() {
		return connection;
	}

	void wyczyscSprzedawcaow() {
		try {
			UsunSprzedawcow.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public int UsunSprzedawce(Sprzedawca Sprzedawca) {
		int count = 0;
		try {
			UsunSprzedawce.setLong(1, Sprzedawca.getId());

			count = UsunSprzedawce.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;
	}

	public int DodajSprzedawce(Sprzedawca Sprzedawca) {
		int count = 0;
		try {
			DodajSprzedawce.setString(1, Sprzedawca.getImie());
			DodajSprzedawce.setString(2, Sprzedawca.getNazwisko());
			DodajSprzedawce.setInt(3, Sprzedawca.getNr());

			count = DodajSprzedawce.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;
	}

/*	public List<Sprzedawca> PobierzSprzedawcow() {
		List<Sprzedawca> Sprzedawcaowie = new ArrayList<Sprzedawca>();

		try {
			ResultSet rs = PobierzSprzedawcow.executeQuery();

			while (rs.next()) {
				Sprzedawca p = new Sprzedawca();
				p.setId(rs.getInt("Sprzedawca_id"));
				p.setImie(rs.getString("imie"));
				p.setNazwisko(rs.getString("nazwisko"));
				p.setNr(rs.getInt("nr_tel"));
				Sprzedawcaowie.add(p);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return Sprzedawcaowie;
	} */

	public List<Sprzedawca> PobierzSprzedawcow(){
		List<Sprzedawca> Sprzedawcaowie = new ArrayList<Sprzedawca>();

		try{
			ResultSet rs = PobierzSprzedawcow.executeQuery();

			while(rs.next()){
				Sprzedawca o = new Sprzedawca();
				o.setId(rs.getLong("Sprzedawca_id"));
				o.setImie(rs.getString("imie"));
				o.setNazwisko(rs.getString("nazwisko"));
				o.setNr(rs.getInt("nr_tel"));
				Sprzedawcaowie.add(o);
			}
		} catch(SQLException e){
			e.printStackTrace();
		}
		return Sprzedawcaowie;
	}

	public int AktualizujSprzedawce(Sprzedawca Sprzedawca){
		int count = 0;
		try{
			AktualizujSprzedawce.setString(1, Sprzedawca.getImie());
			AktualizujSprzedawce.setString(2, Sprzedawca.getNazwisko());
			AktualizujSprzedawce.setLong(3, Sprzedawca.getId());
			AktualizujSprzedawce.setInt(4, Sprzedawca.getNr());


			count = AktualizujSprzedawce.executeUpdate();
		}catch(SQLException e){
			e.printStackTrace();
		}
		return count;
	}


}

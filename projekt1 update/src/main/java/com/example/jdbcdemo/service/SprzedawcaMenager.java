package com.example.jdbcdemo.service;

/**
 * Created by dell on 2015-11-05.
 */
import com.example.jdbcdemo.domain.Sprzedawca;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

public class SprzedawcaMenager {


    private Connection connection;

    private String url = "jdbc:hsqldb:hsql://localhost/workdb";

    private String createTablesprzedawca = "CREATE TABLE Sprzedawca(sprzedawca_id bigint GENERATED BY DEFAULT AS IDENTITY, imie varchar(20), nazwisko varchar(20), nr_tel integer)";

    private PreparedStatement DodajSprzedawca;
    private PreparedStatement UsunSprzedawcow;
    private PreparedStatement UsunSprzedawca;
    private PreparedStatement GetSprzedawcow;
    private PreparedStatement UpdateSprzedawca;

    private Statement statement;

    public SprzedawcaMenager() {
        try {
            connection = DriverManager.getConnection(url);
            statement = connection.createStatement();

            ResultSet rs = connection.getMetaData().getTables(null, null, null,
                    null);
            boolean tableExists = false;
            while (rs.next()) {
                if ("Sprzedawca".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
                    tableExists = true;
                    break;
                }
            }

            if (!tableExists)
                statement.executeUpdate(createTablesprzedawca);

            DodajSprzedawca = connection
                    .prepareStatement("INSERT INTO Sprzedawca (imie, nazwisko, nr_tel) VALUES (?, ?, ?)");
            UsunSprzedawcow = connection
                    .prepareStatement("DELETE FROM Sprzedawca");
            UsunSprzedawca = connection
                    .prepareStatement("DELETE FROM Sprzedawca WHERE sprzedawca_id = ?");
            GetSprzedawcow = connection
                    .prepareStatement("SELECT sprzedawca_id, imie, nazwisko, nr_tel FROM Sprzedawca");
            UpdateSprzedawca = connection
                    .prepareStatement("UPDATE Sprzedawca SET imie = ?, nazwisko = ?, nr_tel = ? WHERE sprzedawca_id = ?");

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    Connection getConnection() {
        return connection;
    }

    void wyczyscSprzedawcow() {
        try {
            UsunSprzedawcow.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public int usunSprzedawca(Sprzedawca sprzedawca) {
        int count = 0;
        try {
            UsunSprzedawca.setLong(1, sprzedawca.getId());

            count = UsunSprzedawca.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return count;
    }

    public int dodajSprzedawca(Sprzedawca sprzedawca) {
        int count = 0;
        try {
            DodajSprzedawca.setString(1, sprzedawca.getImie());
            DodajSprzedawca.setString(2, sprzedawca.getNazwisko());
            DodajSprzedawca.setInt(3, sprzedawca.getNr());

            count = DodajSprzedawca.executeUpdate();

        } catch (SQLException e) {
            e.printStackTrace();
        }
        return count;
    }


    public List<Sprzedawca> GetSprzedawcow(){
        List<Sprzedawca> sprzedawcy= new ArrayList<Sprzedawca>();

        try{
            ResultSet rs = GetSprzedawcow.executeQuery();

            while(rs.next()){
                Sprzedawca o = new Sprzedawca();
                o.setId(rs.getLong("sprzedawca_id"));
                o.setImie(rs.getString("imie"));
                o.setNazwisko(rs.getString("nazwisko"));
                o.setNr(rs.getInt("nr_tel"));
                sprzedawcy.add(o);
            }
        } catch(SQLException e){
            e.printStackTrace();
        }
        return sprzedawcy;
    }

    public int updateSprzedawca(Sprzedawca sprzedawca){
        int count = 0;
        try{
            UpdateSprzedawca.setString(1, sprzedawca.getImie());
            UpdateSprzedawca.setString(2, sprzedawca.getNazwisko());
            UpdateSprzedawca.setLong(3, sprzedawca.getId());
            UpdateSprzedawca.setInt(4, sprzedawca.getNr());


            count = UpdateSprzedawca.executeUpdate();
        }catch(SQLException e){
            e.printStackTrace();
        }
        return count;
    }


}
